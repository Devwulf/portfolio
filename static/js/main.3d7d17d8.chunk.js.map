{"version":3,"sources":["assets/dashboard.jpg","assets/welcome-img.jpg","components/Contact.tsx","components/SectionButton.tsx","components/OnePageScroller.tsx","components/Project.tsx","components/Skills.tsx","components/Welcome.tsx","pages/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Contact","props","state","className","action","htmlFor","type","placeholder","React","Component","SectionButton","isHover","onHoverStart","bind","onHoverEnd","this","setState","indexName","currentIndex","goToIndex","isSelected","index","key","onClick","onMouseEnter","onMouseLeave","style","right","icon","zIndex","name","OnePageScroller","pageContainer","createRef","currentId","scrollIndex","isNavHover","getSectionNames","onUpdateId","onScroll","onNavHoverStart","onNavHoverEnd","goToId","nextIndex","current","children","childNodes","nextHeight","clientHeight","totalHeight","i","windowHeight","window","innerHeight","topOffset","botOffset","length","transform","names","push","id","event","deltaSign","Math","sign","deltaY","min","max","showNavigator","showNav","top","bottom","minHeight","map","ref","onWheel","Project","isFlipped","src","dashboard","width","height","objectFit","objectPosition","Skills","Welcome","welcomeImg","Main","data-name","MainComponent","useParams","library","add","fas","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d7d17d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard.66ea9b6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/welcome-img.55dc10b0.jpg\";","import React from \"react\";\r\n\r\ntype ContactProps = {\r\n\r\n}\r\n\r\ntype ContactState = {\r\n\r\n}\r\n\r\nexport default class Contact extends React.Component<ContactProps, ContactState> {\r\n    constructor(props: ContactProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"w-full h-full flex flex-col items-center justify-center bg-gray-700\">\r\n                <div className=\"mb-4 text-xl font-bold text-gray-200\">Message Me!</div>\r\n                <form action=\"\" className=\"w-1/3\">\r\n                    <div className=\"flex flex-col mb-4\">\r\n                        <label htmlFor=\"\" className=\"text-sm mb-2 text-gray-300\">Name</label>\r\n                        <input type=\"text\" className=\"py-1 px-2 rounded\" />\r\n                    </div>\r\n                    <div className=\"flex flex-col mb-4\">\r\n                        <label htmlFor=\"\" className=\"text-sm mb-2 text-gray-300\">Email</label>\r\n                        <input type=\"text\" className=\"py-1 px-2 rounded\" />\r\n                    </div>\r\n                    <div className=\"flex flex-col mb-4\">\r\n                        <label htmlFor=\"\" className=\"hidden\">Message</label>\r\n                        <textarea className=\"py-1 px-2 rounded\" placeholder=\"Send a message...\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { IndexName } from \"./OnePageScroller\";\r\n\r\ntype SectionButtonProps = {\r\n    indexName: IndexName;\r\n    currentIndex: number;\r\n    goToIndex(index: number): void;\r\n}\r\n\r\ntype SectionButtonState = {\r\n    isHover: boolean;\r\n}\r\n\r\nexport default class SectionButton extends React.Component<SectionButtonProps, SectionButtonState> {\r\n    constructor(props: SectionButtonProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isHover: false\r\n        };\r\n\r\n        this.onHoverStart = this.onHoverStart.bind(this);\r\n        this.onHoverEnd = this.onHoverEnd.bind(this);\r\n    }\r\n\r\n    onHoverStart() {\r\n        this.setState({isHover: true});\r\n    }\r\n\r\n    onHoverEnd() {\r\n        this.setState({isHover: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const { indexName, currentIndex, goToIndex } = this.props;\r\n        const { isHover } = this.state;\r\n        const isSelected = currentIndex === indexName.index;\r\n\r\n        return (\r\n            <button key={indexName.index} className=\"relative mt-1 mb-1\"\r\n                onClick={() => goToIndex(indexName.index)}\r\n                onMouseEnter={this.onHoverStart}\r\n                onMouseLeave={this.onHoverEnd}>\r\n                <div className={`transform duration-200 ease-in-out absolute h-full rounded-full ${isHover || isSelected ? \"w-full bg-blue-500\" : \"w-8 bg-gray-800\"}`}\r\n                    style={{right: 0}}></div>\r\n                <div className=\"flex flex-row-reverse items-center px-2\">\r\n                    <FontAwesomeIcon icon=\"dot-circle\" className=\"text-gray-400\" style={{zIndex: 100}} />\r\n                    <span className={`mr-4 text-gray-200 ${isHover || isSelected ? \"fadeInRight anim-200\" : \"fadeOutRight anim-200\"}`}>\r\n                        {indexName.name}\r\n                    </span>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SectionButton from \"./SectionButton\";\r\n\r\nexport type IndexName = {\r\n    index: number;\r\n    name: string;\r\n}\r\n\r\ntype OnePageScrollerProps = {\r\n    goToId?: string | number;\r\n    showNavigator?: boolean;\r\n    children?: React.ReactNodeArray;\r\n}\r\n\r\ntype OnePageScrollerState = {\r\n    currentId: string;\r\n    scrollIndex: number;\r\n    isNavHover: boolean;\r\n}\r\n\r\nexport default class OnePageScroller extends React.Component<OnePageScrollerProps, OnePageScrollerState> {\r\n    private pageContainer: React.RefObject<HTMLDivElement>;\r\n    \r\n    constructor(props: OnePageScrollerProps) {\r\n        super(props);\r\n\r\n        this.pageContainer = React.createRef();\r\n\r\n        this.state = {\r\n            currentId: \"\",\r\n            scrollIndex: 0,\r\n            isNavHover: false\r\n        };\r\n\r\n        this.goToIndex = this.goToIndex.bind(this);\r\n        this.getSectionNames = this.getSectionNames.bind(this);\r\n        this.onUpdateId = this.onUpdateId.bind(this);\r\n        this.onScroll = this.onScroll.bind(this);\r\n        this.onNavHoverStart = this.onNavHoverStart.bind(this);\r\n        this.onNavHoverEnd = this.onNavHoverEnd.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.goToId)\r\n            this.onUpdateId();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { goToId } = this.props;\r\n        const { currentId, scrollIndex } = this.state;\r\n        if (goToId) {\r\n            if (typeof goToId === \"number\" && goToId !== scrollIndex)\r\n                this.goToIndex(goToId);\r\n            else if (typeof goToId === \"string\" && goToId !== currentId)\r\n                this.onUpdateId();\r\n        }\r\n    }\r\n\r\n    goToIndex(nextIndex: number) {\r\n        const pageContainer = this.pageContainer.current;\r\n        if (!pageContainer)\r\n            return;\r\n\r\n        const children = pageContainer.childNodes;\r\n        if (!children)\r\n            return;\r\n\r\n        const nextHeight: number = (children[nextIndex] as any).clientHeight;\r\n        let totalHeight: number = 0;\r\n        for (let i = 0; i < nextIndex; i++) {\r\n            totalHeight += (children[i] as any).clientHeight;\r\n        }\r\n\r\n        const windowHeight = window.innerHeight;\r\n        const topOffset = nextIndex === 0 ? ((windowHeight - nextHeight) / 2) : 0;\r\n        const botOffset = nextIndex === children.length - 1 ? windowHeight - nextHeight : ((windowHeight - nextHeight) / 2);\r\n        pageContainer.style.transform = `translate3d(0, ${-(totalHeight - botOffset + topOffset)}px, 0)`;\r\n        this.setState({scrollIndex: nextIndex});\r\n    }\r\n\r\n    getSectionNames(): IndexName[] {\r\n        const { children } = this.props;\r\n        if (!children)\r\n            return [];\r\n\r\n        const names: IndexName[] = [];\r\n        for (let i = 0; i < children.length; i++) {\r\n            const elem = (children[i] as React.ReactElement);\r\n            const name = elem.props[\"data-name\"];\r\n            if (name)\r\n                names.push({index: i, name: name});\r\n        }\r\n\r\n        return names;\r\n    }\r\n\r\n    onUpdateId() {\r\n        const { goToId } = this.props;\r\n        if (typeof goToId === \"number\") {\r\n            this.goToIndex(goToId);\r\n            return;\r\n        }\r\n\r\n        const pageContainer = this.pageContainer.current;\r\n        if (!pageContainer)\r\n            return;\r\n\r\n        const children = pageContainer.childNodes;\r\n        if (!children)\r\n            return;\r\n\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (goToId && goToId === (children[i] as any).id) {\r\n                this.setState({currentId: goToId}, () => {\r\n                    this.goToIndex(i);\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // We can use CSS's translate3d(0, y, 0) function for this, by changing y as a percent\r\n    // Example: translate3d(0, -100%, 0) -> translate3d(0, 200%, 0)\r\n    onScroll(event: React.WheelEvent<HTMLDivElement>) {\r\n        const { scrollIndex } = this.state;\r\n        \r\n        const pageContainer = this.pageContainer.current;\r\n        if (!pageContainer)\r\n            return;\r\n\r\n        const children = pageContainer.childNodes;\r\n        if (!children)\r\n            return;\r\n\r\n        let nextIndex = scrollIndex;\r\n        const deltaSign = Math.sign(event.deltaY);\r\n        if (deltaSign > 0) {\r\n            // Going down\r\n            nextIndex = Math.min(children.length - 1, nextIndex + 1);\r\n        }\r\n        else if (deltaSign < 0) {\r\n            // Going up\r\n            nextIndex = Math.max(0, nextIndex - 1);\r\n        }\r\n\r\n        if (nextIndex === scrollIndex)\r\n            return;\r\n        \r\n        this.goToIndex(nextIndex);\r\n    }\r\n\r\n    onNavHoverStart() {\r\n        this.setState({isNavHover: true});\r\n    }\r\n\r\n    onNavHoverEnd() {\r\n        this.setState({isNavHover: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const { showNavigator, children } = this.props;\r\n        const { scrollIndex } = this.state;\r\n        const showNav = showNavigator ?? false;\r\n        const names = this.getSectionNames();\r\n        \r\n        return ( \r\n            <div className=\"overflow-hidden relative h-screen\">\r\n                {showNav && (\r\n                    <div className=\"absolute flex flex-col justify-center\" style={{top: \"50%\", bottom: \"50%\", right: \"0\", zIndex: 100}}>\r\n                        <div className=\"w-40 pr-4\" style={{minHeight: (names.length * 32)}}\r\n                            onMouseEnter={this.onNavHoverStart}\r\n                            onMouseLeave={this.onNavHoverEnd}>\r\n                            <div className=\"flex flex-col px-3 py-2 rounded\">\r\n                                {names.map(name => (\r\n                                    <SectionButton key={name.index} indexName={name} currentIndex={scrollIndex} goToIndex={this.goToIndex} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div ref={this.pageContainer}\r\n                    className=\"transform duration-300 ease-in-out h-full\"\r\n                    onWheel={this.onScroll}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport dashboard from \"../assets/dashboard.jpg\";\r\n\r\ntype ProjectProps = {\r\n    isFlipped: boolean;\r\n}\r\n\r\ntype ProjectState = {\r\n\r\n}\r\n\r\nexport default class Project extends React.Component<ProjectProps, ProjectState> {\r\n    constructor(props: ProjectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const { isFlipped } = this.props;\r\n\r\n        return (\r\n            <div className=\"w-full h-full flex items-center justify-center\">\r\n                {!isFlipped && (\r\n                    <div className=\"w-full h-full flex flex-row\">\r\n                        <div className=\"w-1/2 flex items-center justify-center\">\r\n                            <span className=\"text-3xl\">Example Project</span>\r\n                        </div>\r\n                        <img src={dashboard} style={{width: \"60%\", height: \"100%\", objectFit: \"cover\", objectPosition: \"0px -100px\"}} />\r\n                    </div>\r\n                ) || \r\n                isFlipped && (\r\n                    <div className=\"w-full h-full flex flex-row\">\r\n                        <img src={dashboard} style={{width: \"60%\", height: \"100%\", objectFit: \"cover\", objectPosition: \"0px -100px\"}} />\r\n                        <div className=\"w-1/2 flex items-center justify-center\">\r\n                            <span className=\"text-3xl\">Example Project</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\ntype SkillsProps = {\r\n\r\n}\r\n\r\ntype SkillsState = {\r\n\r\n}\r\n\r\nexport default class Skills extends React.Component<SkillsProps, SkillsState> {\r\n    constructor(props: SkillsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"w-full h-full flex items-center justify-between px-24 py-24 bg-gray-800\">\r\n                <div className=\"flex flex-col items-center justify-center mr-24 w-full h-full rounded-lg shadow-lg bg-gray-200\">\r\n                    <span className=\"text-3xl mb-12 font-bold\">Languages</span>\r\n                    <span className=\"text-2xl mb-4\">C#</span>\r\n                    <span className=\"text-2xl mb-4\">Java</span>\r\n                    <span className=\"text-2xl mb-4\">Javascript/TypeScript</span>\r\n                    <span className=\"text-2xl mb-4\">CSS</span>\r\n                    <span className=\"text-2xl mb-4\">HTML</span>\r\n                    <span className=\"text-2xl mb-4\">Python</span>\r\n                </div>\r\n                <div className=\"flex flex-col items-center justify-center mr-24 w-full h-full rounded-lg shadow-lg bg-gray-200\">\r\n                    <span className=\"text-3xl mb-12 font-bold\">Skills</span>\r\n                    <span className=\"text-2xl mb-4\">MySQL</span>\r\n                    <span className=\"text-2xl mb-4\">MongoDB</span>\r\n                    <span className=\"text-2xl mb-4\">React</span>\r\n                    <span className=\"text-2xl mb-4\">Asp.NET Core</span>\r\n                </div>\r\n                <div className=\"flex flex-col items-center justify-center w-full h-full rounded-lg shadow-lg bg-gray-200\">\r\n                    <span className=\"text-3xl mb-12 font-bold\">Interests</span>\r\n                    <span className=\"text-2xl mb-4\">Data Science</span>\r\n                    <span className=\"text-2xl mb-4\">Machine Learning</span>\r\n                    <span className=\"text-2xl mb-4\">Web Development</span>\r\n                    <span className=\"text-2xl mb-4\">SaaS</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport welcomeImg from \"../assets/welcome-img.jpg\";\r\n\r\ntype WelcomeProps = {\r\n\r\n}\r\n\r\ntype WelcomeState = {\r\n\r\n}\r\n\r\nexport default class Welcome extends React.Component<WelcomeProps, WelcomeState> {\r\n    constructor(props: WelcomeProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full h-full flex items-center justify-center px-48 py-40 bg-gray-900\">\r\n                <div className=\"\">\r\n                    <div className=\"mr-48 text-5xl text-gray-200\">Hello! I am a</div>\r\n                    <div className=\"mr-48 text-5xl text-gray-200\">full-stack web dev;</div>\r\n                    <div className=\"mr-48 text-5xl text-gray-200\">aspiring data scientist.</div>\r\n                </div>\r\n                <img src={welcomeImg} width={512} height={512} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Contact from \"../components/Contact\";\r\nimport OnePageScroller from \"../components/OnePageScroller\";\r\nimport Project from \"../components/Project\";\r\nimport Skills from \"../components/Skills\";\r\nimport Welcome from \"../components/Welcome\";\r\n\r\ntype MainProps = {\r\n    id?: string;\r\n}\r\n\r\ntype MainState = {\r\n\r\n}\r\n\r\nexport default function Main(props: MainProps) {\r\n    const { id } = props;\r\n\r\n    return (\r\n        <div className=\"main2\">\r\n            <OnePageScroller goToId={id} showNavigator={true}>\r\n                <div id=\"welcome\" data-name=\"Welcome\" className=\"w-screen h-screen\">\r\n                    <Welcome />\r\n                </div>\r\n                <div id=\"project1\" data-name=\"Project 1\" className=\"w-screen bg-gray-200\" style={{height: \"40rem\"}}>\r\n                    <Project isFlipped={false} />\r\n                </div>\r\n                <div id=\"project2\" data-name=\"Project 2\" className=\"w-screen bg-gray-300\" style={{height: \"40rem\"}}>\r\n                    <Project isFlipped={true} />\r\n                </div>\r\n                <div id=\"project3\" data-name=\"Project 3\" className=\"w-screen bg-gray-400\" style={{height: \"40rem\"}}>\r\n                    <Project isFlipped={false} />\r\n                </div>\r\n                <div id=\"project4\" data-name=\"Project 4\" className=\"w-screen bg-gray-500\" style={{height: \"40rem\"}}>\r\n                    <Project isFlipped={true} />\r\n                </div>\r\n                <div id=\"skills\" data-name=\"Skills\" className=\"w-screen\" style={{height: \"48rem\"}}>\r\n                    <Skills />\r\n                </div>\r\n                <div id=\"contact\" data-name=\"Contact\" className=\"w-screen\" style={{height: \"32rem\"}}>\r\n                    <Contact />\r\n                </div>\r\n            </OnePageScroller>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, useParams } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport OnePageScroller from \"./components/OnePageScroller\";\r\nimport Main from \"./pages/Main\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/portfolio/\" component={Main} />\r\n                <Route exact path=\"/portfolio/:id\" component={MainComponent} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nfunction MainComponent() {\r\n    const { id } = useParams();\r\n\r\n    return (\r\n        <Main id={id} />\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}