{"version":3,"sources":["assets/dashboard.jpg","assets/welcome-img.jpg","components/Contact.tsx","components/Project.tsx","components/Skills.tsx","components/Welcome.tsx","pages/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Contact","props","state","className","action","htmlFor","type","placeholder","React","Component","Project","isFlipped","this","src","dashboard","style","width","height","objectFit","objectPosition","Skills","Welcome","welcomeImg","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2cf7d45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard.66ea9b6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/welcome-img.55dc10b0.jpg\";","import React from \"react\";\r\n\r\ntype ContactProps = {\r\n\r\n}\r\n\r\ntype ContactState = {\r\n\r\n}\r\n\r\nexport default class Contact extends React.Component<ContactProps, ContactState> {\r\n    constructor(props: ContactProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"w-full h-full flex flex-col items-center justify-center bg-gray-700\">\r\n                <div className=\"mb-4 text-xl font-bold text-gray-200\">Message Me!</div>\r\n                <form action=\"\" className=\"w-1/3\">\r\n                    <div className=\"flex flex-col mb-4\">\r\n                        <label htmlFor=\"\" className=\"text-sm mb-2 text-gray-300\">Name</label>\r\n                        <input type=\"text\" className=\"py-1 px-2 rounded\" />\r\n                    </div>\r\n                    <div className=\"flex flex-col mb-4\">\r\n                        <label htmlFor=\"\" className=\"text-sm mb-2 text-gray-300\">Email</label>\r\n                        <input type=\"text\" className=\"py-1 px-2 rounded\" />\r\n                    </div>\r\n                    <div className=\"flex flex-col mb-4\">\r\n                        <label htmlFor=\"\" className=\"hidden\">Message</label>\r\n                        <textarea className=\"py-1 px-2 rounded\" placeholder=\"Send a message...\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport dashboard from \"../assets/dashboard.jpg\";\r\n\r\ntype ProjectProps = {\r\n    isFlipped: boolean;\r\n}\r\n\r\ntype ProjectState = {\r\n\r\n}\r\n\r\nexport default class Project extends React.Component<ProjectProps, ProjectState> {\r\n    constructor(props: ProjectProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const { isFlipped } = this.props;\r\n\r\n        return (\r\n            <div className=\"w-full h-full flex items-center justify-center\">\r\n                {!isFlipped && (\r\n                    <div className=\"w-full h-full flex flex-row\">\r\n                        <div className=\"w-1/2 flex items-center justify-center\">\r\n                            <span className=\"text-3xl\">Example Project</span>\r\n                        </div>\r\n                        <img src={dashboard} style={{width: \"60%\", height: \"100%\", objectFit: \"cover\", objectPosition: \"0px -140px\"}} />\r\n                    </div>\r\n                ) || \r\n                isFlipped && (\r\n                    <div className=\"w-full h-full flex flex-row\">\r\n                        <img src={dashboard} style={{width: \"60%\", height: \"100%\", objectFit: \"cover\", objectPosition: \"0px -140px\"}} />\r\n                        <div className=\"w-1/2 flex items-center justify-center\">\r\n                            <span className=\"text-3xl\">Example Project</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\ntype SkillsProps = {\r\n\r\n}\r\n\r\ntype SkillsState = {\r\n\r\n}\r\n\r\nexport default class Skills extends React.Component<SkillsProps, SkillsState> {\r\n    constructor(props: SkillsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"w-full h-full flex items-center justify-between px-24 py-24 bg-gray-800\">\r\n                <div className=\"flex flex-col items-center justify-center mr-24 w-full h-full rounded-lg shadow-lg bg-gray-200\">\r\n                    <span className=\"text-3xl mb-12 font-bold\">Languages</span>\r\n                    <span className=\"text-2xl mb-4\">C#</span>\r\n                    <span className=\"text-2xl mb-4\">Java</span>\r\n                    <span className=\"text-2xl mb-4\">Javascript/TypeScript</span>\r\n                    <span className=\"text-2xl mb-4\">CSS</span>\r\n                    <span className=\"text-2xl mb-4\">HTML</span>\r\n                    <span className=\"text-2xl mb-4\">Python</span>\r\n                </div>\r\n                <div className=\"flex flex-col items-center justify-center mr-24 w-full h-full rounded-lg shadow-lg bg-gray-200\">\r\n                    <span className=\"text-3xl mb-12 font-bold\">Skills</span>\r\n                    <span className=\"text-2xl mb-4\">MySQL</span>\r\n                    <span className=\"text-2xl mb-4\">MongoDB</span>\r\n                    <span className=\"text-2xl mb-4\">React</span>\r\n                    <span className=\"text-2xl mb-4\">Asp.NET Core</span>\r\n                </div>\r\n                <div className=\"flex flex-col items-center justify-center w-full h-full rounded-lg shadow-lg bg-gray-200\">\r\n                    <span className=\"text-3xl mb-12 font-bold\">Interests</span>\r\n                    <span className=\"text-2xl mb-4\">Data Science</span>\r\n                    <span className=\"text-2xl mb-4\">Machine Learning</span>\r\n                    <span className=\"text-2xl mb-4\">Web Development</span>\r\n                    <span className=\"text-2xl mb-4\">SaaS</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport welcomeImg from \"../assets/welcome-img.jpg\";\r\n\r\ntype WelcomeProps = {\r\n\r\n}\r\n\r\ntype WelcomeState = {\r\n\r\n}\r\n\r\nexport default class Welcome extends React.Component<WelcomeProps, WelcomeState> {\r\n    constructor(props: WelcomeProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-full h-full flex items-center justify-center px-48 py-40 bg-gray-900\">\r\n                <div className=\"\">\r\n                    <div className=\"mr-48 text-5xl text-gray-200\">Hello! I am a</div>\r\n                    <div className=\"mr-48 text-5xl text-gray-200\">full-stack web dev,</div>\r\n                    <div className=\"mr-48 text-5xl text-gray-200\">with machine learning interests.</div>\r\n                </div>\r\n                <img src={welcomeImg} width={512} height={512} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Contact from \"../components/Contact\";\r\nimport Project from \"../components/Project\";\r\nimport Skills from \"../components/Skills\";\r\nimport Welcome from \"../components/Welcome\";\r\n\r\ntype MainProps = {\r\n\r\n}\r\n\r\ntype MainState = {\r\n\r\n}\r\n\r\nexport default class Main extends React.Component<MainProps, MainState> {\r\n    constructor(props: MainProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main2\">\r\n                <div className=\"w-screen h-screen\">\r\n                    <Welcome />\r\n                </div>\r\n                <div className=\"w-screen bg-gray-200\" style={{height: \"32rem\"}}>\r\n                    <Project isFlipped={false} />\r\n                </div>\r\n                <div className=\"w-screen bg-gray-300\" style={{height: \"32rem\"}}>\r\n                    <Project isFlipped={true} />\r\n                </div>\r\n                <div className=\"w-screen bg-gray-400\" style={{height: \"32rem\"}}>\r\n                    <Project isFlipped={false} />\r\n                </div>\r\n                <div className=\"w-screen bg-gray-500\" style={{height: \"32rem\"}}>\r\n                    <Project isFlipped={true} />\r\n                </div>\r\n                <div className=\"w-screen\" style={{height: \"48rem\"}}>\r\n                    <Skills />\r\n                </div>\r\n                <div className=\"w-screen\" style={{height: \"32rem\"}}>\r\n                    <Contact />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport Main from \"./pages/Main\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Main />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}